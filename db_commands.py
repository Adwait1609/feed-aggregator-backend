#!/usr/bin/env python3
"""
Database Commands Summary for RSS Feed Reader
All the commands you need to inspect and manage your database
"""

def show_commands():
    print("🗄️  RSS FEED READER - DATABASE COMMANDS SUMMARY")
    print("=" * 80)
    
    print("📂 DATABASE LOCATION:")
    print("=" * 50)
    print("✅ Database file: news_aggregator.db")
    print("📁 Location: ./news_aggregator.db (in project root)")
    print("📊 Type: SQLite3 database")
    print("🔧 Configuration: utils/config.py (database_url)")
    print()
    
    print("🔍 INSPECT DATABASE:")
    print("=" * 50)
    print("1. Full database inspection:")
    print("   uv run python db_inspector.py")
    print("   Shows: file info, tables, users, feeds, articles, recent activity")
    print()
    print("2. Check feed crawl status:")
    print("   uv run python feed_tracker.py status")
    print("   Shows: last crawled times in nice format")
    print()
    print("3. Monitor feeds and articles:")
    print("   uv run python monitor.py status")
    print("   Shows: feed status and next crawl times")
    print()
    
    print("🔄 MANAGE FEEDS:")
    print("=" * 50)
    print("1. Update CSV tracker:")
    print("   uv run python feed_tracker.py update")
    print()
    print("2. Force crawl a feed:")
    print("   uv run python monitor.py crawl TechCrunch")
    print("   uv run python monitor.py crawl 1  # by feed ID")
    print()
    print("3. Show recent articles:")
    print("   uv run python monitor.py articles 10")
    print()
    
    print("💻 DATABASE QUERIES (Python):")
    print("=" * 50)
    print("Run Python commands to query database:")
    print()
    print("# Check users")
    print("uv run python -c \"")
    print("from database.connection import get_db")
    print("from models.user import User")
    print("session = next(get_db())")
    print("users = session.query(User).all()")
    print("for u in users: print(f'{u.id}: {u.username} ({u.email})')")
    print("session.close()\"")
    print()
    print("# Check feeds")
    print("uv run python -c \"")
    print("from database.connection import get_db")
    print("from models.feed import RSSFeed")
    print("session = next(get_db())")
    print("feeds = session.query(RSSFeed).all()")
    print("for f in feeds: print(f'{f.id}: {f.name} - {f.url}')")
    print("session.close()\"")
    print()
    print("# Count articles")
    print("uv run python -c \"")
    print("from database.connection import get_db")
    print("from models.article import Article")
    print("session = next(get_db())")
    print("count = session.query(Article).count()")
    print("print(f'Total articles: {count}')")
    print("session.close()\"")
    print()
    
    print("🏃 SERVER & BACKGROUND JOBS:")
    print("=" * 50)
    print("1. Start server (this starts background jobs):")
    print("   uv run python main.py")
    print("   ✅ Background jobs will run automatically")
    print("   ✅ CSV file will update when feeds are crawled")
    print("   ✅ Database will get new articles")
    print()
    print("2. Job status explanation:")
    print("   uv run python job_info.py")
    print()
    
    print("📁 FILE LOCATIONS:")
    print("=" * 50)
    print("🗄️  news_aggregator.db        - Main SQLite database")
    print("📊 feed_crawl_times.csv       - Feed crawl tracking CSV")
    print("⚙️  utils/config.py            - Database configuration")
    print("🔧 database/connection.py     - Database connection setup")
    print("📋 models/                    - Database table definitions")
    print()
    
    print("⚠️  IMPORTANT NOTES:")
    print("=" * 50)
    print("• Background jobs ONLY run when server is running")
    print("• Stop server with Ctrl+C (this stops jobs too)")
    print("• CSV file updates automatically during crawls")
    print("• Database grows as more articles are added")
    print("• Each user has their own feeds and articles")
    print()
    
    print("🔧 TROUBLESHOOTING:")
    print("=" * 50)
    print("• No database file? Run: uv run python main.py (creates it)")
    print("• No articles? Check if feeds were crawled recently")
    print("• CSV not updating? Make sure server is running")
    print("• Want fresh start? Delete news_aggregator.db and restart")
    print()
    
    print("💡 QUICK TIPS:")
    print("=" * 50)
    print("✅ Daily workflow:")
    print("  1. uv run python main.py        # Start server")
    print("  2. Keep it running for auto-crawling")
    print("  3. uv run python feed_tracker.py status  # Check progress")
    print()
    print("✅ Database inspection:")
    print("  1. uv run python db_inspector.py")
    print("  2. uv run python monitor.py articles 5")
    print()
    print("✅ Testing:")
    print("  1. uv run python monitor.py crawl TechCrunch")
    print("  2. uv run python feed_tracker.py status")


if __name__ == "__main__":
    show_commands()
